version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres_password
      - POSTGRES_DB=app_database
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - DATABASE_URL=postgresql://postgres:postgres_password@postgres:5432/app_database
      - POSTGRES_PRISMA_URL=postgresql://postgres:postgres_password@postgres:5432/app_database
      - POSTGRES_URL_NON_POOLING=postgresql://postgres:postgres_password@postgres:5432/app_database
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  studio:
    build:
      context: .
      dockerfile: Dockerfile.studio
    ports:
      - "5555:5555"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres_password
      - POSTGRES_DB=app_database
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - DATABASE_URL=postgresql://postgres:postgres_password@postgres:5432/app_database
      - POSTGRES_PRISMA_URL=postgresql://postgres:postgres_password@postgres:5432/app_database
      - POSTGRES_URL_NON_POOLING=postgresql://postgres:postgres_password@postgres:5432/app_database
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres_password
      - POSTGRES_DB=app_database
    command: postgres -c password_encryption=md5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
